name: Test CI

on: [push, pull_request]

env:
  qemu-version: 7.1.0
  rust-toolchain: nightly

jobs:
  Fake-Test:
    name: Linux Application Image Test
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        # arch: [x86_64, riscv64, aarch64]
        arch: [riscv64]
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal                           # 使用 minimal 配置文件，这通常是一个轻量级的配置文件，可能只包含项目的基本信息。
          toolchain: ${{ env.rust-toolchain }}       # 表示使用环境变量 rust_toolchain 中指定的 Rust 工具链版本。 
          components: rust-src, llvm-tools-preview, rustfmt, clippy

      - name: Cache QEMU
        id: cache-qemu
        uses: actions/cache@v3
        with:
          path: qemu-${{ env.qemu-version }}
          key: qemu-${{ env.qemu-version }}

      - name: Install ninja-build
        run: sudo apt-get update && sudo apt-get install -y ninja-build

      - name: Download and Compile QEMU
        if: steps.cache-qemu.outputs.cache-hit != 'true'
        run: .github/scripts/make-qemu.sh ${{ env.qemu-version }}

      - name: Install QEMU
        run: |
          cd qemu-${{ env.qemu-version }} && sudo make install
          qemu-system-${{ matrix.arch }} --version

      - name: Prepare ext4fs-img
        # run: cargo libc-test --arch ${{ matrix.arch }} && cargo image --arch ${{ matrix.arch }}
        run: ./1.sh libc-static

      - if: matrix.arch == 'riscv64'
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-binutils
          version: latest

      - name: Run tests
        # # if: github.event_name != 'schedule'
        # run: make ARCH=${{ matrix.arch }} FEATURES=img run LOG=info
        run: ./1.sh libc-static&&make A=apps/oscomp ARCH=riscv64 FEATURES=img run LOG=debug

      # - name: Run full tests
      #   if: github.event_name == 'schedule'
      #   run: cd tests && python3 linux_libc_test-qemu.py --arch ${{ matrix.arch }}

